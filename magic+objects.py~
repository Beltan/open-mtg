
# coding: utf-8

# In[1]:

import numpy as np
import random
import mcts
from cards import *
from players import *
from game import *    
from random_policy import *
from decklists import *


# In[2]:

# todo: handle generic mana debt
# todo: implement 7th or 8th ed starter 2 player decks
# todo: clean up and sexify code
#%%capture
player_0_wins = 0
player_1_wins = 0
for i in range(10):
    game = Game(Player(get_8ed_core_silver_deck()), Player(get_8ed_core_silver_deck()))
    game.start_game()
    while not game.is_over():
        #print("moves are %s" % (game.get_moves()))
        if game.player_with_priority.index is 0:
            move = game.player_with_priority.determine_move(method="random", game=game)
        else:
            if len(game.get_moves()) == 1:
                move = game.get_moves()[0]
            else:
                move = mcts.uct(game, itermax = 10)
        game.make_move(move)    
    for j in range(2):
        print(game.get_legal_moves(game.players[j]))
    if game.players[1].has_lost:
        player_0_wins += 1
    elif game.players[0].has_lost:
        player_1_wins += 1
    print("game is over! current standings: %i - %i" % (player_0_wins, player_1_wins))
print("player 0 wins: %i, player 1 wins: %i" % (player_0_wins, player_1_wins))
